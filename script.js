document.addEventListener('DOMContentLoaded', () => {
    // DOM ÂÖÉÁ¥†
    const inputText = document.getElementById('inputText');
    const outputText = document.getElementById('outputText');
    const inputCharCount = document.getElementById('inputCharCount');
    const outputCharCount = document.getElementById('outputCharCount');
    const processBtn = document.getElementById('processBtn');
    const copyBtn = document.getElementById('copyBtn');
    const clearBtn = document.getElementById('clearBtn');
    const themeToggle = document.getElementById('themeToggle');

    // Ê£ÄÊü•ÂøÖË¶ÅÁöÑDOMÂÖÉÁ¥†ÊòØÂê¶Â≠òÂú®
    if (!inputText || !outputText || !inputCharCount || !outputCharCount || !processBtn || !copyBtn || !clearBtn || !themeToggle) {
        console.error('ÂøÖË¶ÅÁöÑDOMÂÖÉÁ¥†Êú™ÊâæÂà∞');
        return;
    }

    // ÂÆâÂÖ®Âú∞Êõ¥Êñ∞ÂÖÉÁ¥†ÂÜÖÂÆπ
    function safeUpdateElement(element, content) {
        if (element && element.textContent !== undefined) {
            element.textContent = content;
        }
    }

    // ÂÆâÂÖ®Âú∞Êõ¥Êñ∞ÂÖÉÁ¥†Â±ûÊÄß
    function safeSetAttribute(element, attr, value) {
        if (element && element.setAttribute) {
            element.setAttribute(attr, value);
        }
    }

    // ÂÆâÂÖ®Âú∞Ê∑ªÂä†/ÁßªÈô§Á±ª
    function safeToggleClass(element, className, add) {
        if (element && element.classList) {
            if (add) {
                element.classList.add(className);
            } else {
                element.classList.remove(className);
            }
        }
    }

    // Êõ¥Êñ∞Â≠óÁ¨¶ÁªüËÆ°
    function updateCharCount(text, element) {
        safeUpdateElement(element, text.length);
    }

    // ‰∏ªÈ¢òÂàáÊç¢
    themeToggle.addEventListener('click', () => {
        try {
            const isDark = document.body.getAttribute('data-theme') === 'dark';
            safeSetAttribute(document.body, 'data-theme', isDark ? 'light' : 'dark');
            safeUpdateElement(themeToggle, isDark ? 'üåô' : '‚òÄÔ∏è');
            localStorage.setItem('theme', isDark ? 'light' : 'dark');
        } catch (error) {
            console.error('‰∏ªÈ¢òÂàáÊç¢Â§±Ë¥•:', error);
        }
    });

    // ÂàùÂßãÂåñ‰∏ªÈ¢ò
    try {
        const savedTheme = localStorage.getItem('theme') || 'light';
        safeSetAttribute(document.body, 'data-theme', savedTheme);
        safeUpdateElement(themeToggle, savedTheme === 'dark' ? '‚òÄÔ∏è' : 'üåô');
    } catch (error) {
        console.error('‰∏ªÈ¢òÂàùÂßãÂåñÂ§±Ë¥•:', error);
    }

    // Â≠óÊï∞ÁªüËÆ°
    inputText.addEventListener('input', () => {
        try {
            updateCharCount(inputText.value, inputCharCount);
        } catch (error) {
            console.error('Â≠óÊï∞ÁªüËÆ°Êõ¥Êñ∞Â§±Ë¥•:', error);
        }
    });

    // ÊñáÊú¨Â§ÑÁêÜÂáΩÊï∞
    function processText(text) {
        if (!text) return '';

        try {
            // Áªü‰∏ÄÊç¢Ë°åÁ¨¶
            text = text.replace(/\r\n/g, '\n').replace(/\r/g, '\n');

            // Á©∫Ê†ºÂ§ÑÁêÜ
            const spaceOption = document.querySelector('input[name="spaceOption"]:checked')?.value;
            if (spaceOption) {
                switch (spaceOption) {
                    case 'remove':
                        text = text.replace(/[ \t]+/g, '');
                        break;
                    case 'single':
                        text = text.replace(/[ \t]+/g, ' ');
                        break;
                }
            }

            // Êç¢Ë°åÂ§ÑÁêÜ
            const lineOption = document.querySelector('input[name="lineOption"]:checked')?.value;
            if (lineOption) {
                switch (lineOption) {
                    case 'remove':
                        text = text.replace(/\n+/g, '');
                        break;
                    case 'single':
                        text = text.replace(/\n{2,}/g, '\n');
                        text = text.split('\n').map(line => line.trim()).join('\n');
                        break;
                }
            }

            // ÁâπÊÆäÁ¨¶Âè∑Â§ÑÁêÜ
            const symbolOption = document.querySelector('input[name="symbolOption"]:checked')?.value;
            if (symbolOption) {
                if (symbolOption === 'remove') {
                    text = text.replace(/[^\u4e00-\u9fa5a-zA-Z0-9\s.,!?;:Ôºå„ÄÇÔºÅÔºüÔºõÔºö]/g, '');
                } else if (symbolOption === 'smart') {
                    text = text.replace(/Ôºå/g, ',')
                              .replace(/„ÄÇ/g, '.')
                              .replace(/ÔºÅ/g, '!')
                              .replace(/Ôºü/g, '?')
                              .replace(/Ôºõ/g, ';')
                              .replace(/Ôºö/g, ':')
                              .replace(/Ôºà/g, '(')
                              .replace(/Ôºâ/g, ')')
                              .replace(/„Äê/g, '[')
                              .replace(/„Äë/g, ']')
                              .replace(/„Ää/g, '<')
                              .replace(/„Äã/g, '>')
                              .replace(/[""''„Äå„Äç„Äé„Äè]/g, '"')
                              .replace(/\.{3,}/g, '‚Ä¶');
                }
            }

            // Ê†áÁÇπ‰ºòÂåñ
            const chinesePunctuation = document.getElementById('chinesePunctuation');
            const englishPunctuation = document.getElementById('englishPunctuation');
            
            if (chinesePunctuation?.checked) {
                text = text.replace(/([^a-zA-Z0-9])([,\.!?;:])/g, '$1Ôºå');
            }
            if (englishPunctuation?.checked) {
                text = text.replace(/([a-zA-Z0-9])([Ôºå„ÄÇÔºÅÔºüÔºõÔºö])/g, '$1,');
            }

            // ÊÆµËêΩÊï¥ÁêÜ
            const indentFirstLine = document.getElementById('indentFirstLine');
            const uniformSpacing = document.getElementById('uniformSpacing');
            
            if (indentFirstLine?.checked) {
                text = text.split('\n').map(line => {
                    return line.trim() ? '    ' + line : line;
                }).join('\n');
            }
            if (uniformSpacing?.checked) {
                text = text.replace(/\n{3,}/g, '\n\n');
                text = text.trim();
            }

            return text;
        } catch (error) {
            console.error('ÊñáÊú¨Â§ÑÁêÜÂ§±Ë¥•:', error);
            return text;
        }
    }

    // Â§ÑÁêÜÊåâÈíÆÁÇπÂáª‰∫ã‰ª∂
    processBtn.addEventListener('click', () => {
        try {
            if (!inputText.value.trim()) {
                alert('ËØ∑ËæìÂÖ•ÈúÄË¶ÅÊ∏ÖÊ¥óÁöÑÊñáÊú¨ÂÜÖÂÆπÔºÅ');
                return;
            }

            processBtn.disabled = true;
            safeUpdateElement(processBtn, 'Â§ÑÁêÜ‰∏≠...');
            
            setTimeout(() => {
                try {
                    const processedText = processText(inputText.value);
                    outputText.value = processedText;
                    updateCharCount(processedText, outputCharCount);
                    
                    safeUpdateElement(processBtn, 'Ê∏ÖÊ¥óÂÆåÊàêÔºÅ');
                    safeToggleClass(processBtn, 'success', true);
                    
                    setTimeout(() => {
                        safeUpdateElement(processBtn, '‰∏ÄÈîÆÊ∏ÖÊ¥ó');
                        processBtn.disabled = false;
                        safeToggleClass(processBtn, 'success', false);
                    }, 2000);
                } catch (error) {
                    console.error('Â§ÑÁêÜÂ§±Ë¥•:', error);
                    alert('ÊñáÊú¨Â§ÑÁêÜÂ§±Ë¥•ÔºåËØ∑ÈáçËØïÔºÅ');
                    safeUpdateElement(processBtn, '‰∏ÄÈîÆÊ∏ÖÊ¥ó');
                    processBtn.disabled = false;
                }
            }, 100);
        } catch (error) {
            console.error('ÊåâÈíÆÁÇπÂáªÂ§ÑÁêÜÂ§±Ë¥•:', error);
        }
    });

    // Â§çÂà∂ÊåâÈíÆÁÇπÂáª‰∫ã‰ª∂
    copyBtn.addEventListener('click', async () => {
        try {
            if (!outputText.value) {
                alert('Ê≤°ÊúâÂèØÂ§çÂà∂ÁöÑÂÜÖÂÆπÔºÅ');
                return;
            }

            await navigator.clipboard.writeText(outputText.value);
            safeUpdateElement(copyBtn, 'Â∑≤Â§çÂà∂ÔºÅ');
            safeToggleClass(copyBtn, 'success', true);
            
            setTimeout(() => {
                safeUpdateElement(copyBtn, 'Â§çÂà∂ÁªìÊûú');
                safeToggleClass(copyBtn, 'success', false);
            }, 2000);
        } catch (err) {
            console.error('Â§çÂà∂Â§±Ë¥•:', err);
            alert('Â§çÂà∂Â§±Ë¥•ÔºåËØ∑ÊâãÂä®Â§çÂà∂');
        }
    });

    // Ê∏ÖÁ©∫ÊåâÈíÆÁÇπÂáª‰∫ã‰ª∂
    clearBtn.addEventListener('click', () => {
        try {
            inputText.value = '';
            outputText.value = '';
            updateCharCount('', inputCharCount);
            updateCharCount('', outputCharCount);
        } catch (error) {
            console.error('Ê∏ÖÁ©∫Êìç‰ΩúÂ§±Ë¥•:', error);
        }
    });
}); 